trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ROCKSDBVNUM=`cat rocksdbversion`
      echo "##vso[task.setvariable variable=ROCKSDBVERSION]${ROCKSDBVNUM}.$(build.buildId)"
      echo "##vso[task.setvariable variable=ROCKSDBVERSIONBASE]${ROCKSDBVNUM}"
    workingDirectory: '$(Build.SourcesDirectory)'

- task: NuGetToolInstaller@0

- task: DotNetCoreInstaller@0
  displayName: 'Install .net core 3.0'
  inputs:
    version: '3.1.301'

- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    projects: '$(Build.SourcesDirectory)/build-codegen/CSharpGen.csproj'
    workingDirectory: '$(Build.SourcesDirectory)/build-codegen/'
    
- task: AzureCLI@1
  inputs:
    azureSubscription: 'Pay-As-You-Go(df68d6af-9145-400b-9276-6a84ca4dec2b)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob download -f $(Build.SourcesDirectory)/csharp/runtimes/win-x64/native/rocksdb.dll --account-name curiositydev  -c rocksdb  -n rocksdb-v$(ROCKSDBVERSIONBASE).dll'

- task: AzureCLI@1
  inputs:
    azureSubscription: 'Pay-As-You-Go(df68d6af-9145-400b-9276-6a84ca4dec2b)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob download -f $(Build.SourcesDirectory)/csharp/runtimes/linux-x64/native/librocksdb.so --account-name curiositydev  -c rocksdb  -n librocksdb-v$(ROCKSDBVERSIONBASE).so'

- task: AzureCLI@1
  inputs:
    azureSubscription: 'Pay-As-You-Go(df68d6af-9145-400b-9276-6a84ca4dec2b)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob download -f $(Build.SourcesDirectory)/csharp/runtimes/osx-x64/native/librocksdb.dylib --account-name curiositydev  -c rocksdb  -n librocksdb-v$(ROCKSDBVERSIONBASE).dylib'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/csharp/RocksDbSharp.csproj'
    workingDirectory: '$(Build.SourcesDirectory)/csharp/'
    arguments: '-c Release /p:Version=$(ROCKSDBVERSION) /p:AllowUnsafeBlocks=True /p:LangVersion=latest'

- task: CmdLine@2
  inputs:
    script: 'ls $(Build.SourcesDirectory) -hR'
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)/csharp/RocksDbSharp.csproj'
    configuration: 'Release'
    versioningScheme: 'off'
    buildProperties: 'Version="$(ROCKSDBVERSION)";AllowUnsafeBlocks="True";LangVersion="latest"'

- task: CmdLine@2
  inputs:
    script: 'ls $(Build.SourcesDirectory) -hR'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '**/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget-curiosity'
